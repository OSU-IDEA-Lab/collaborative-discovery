Error: Request failed with status code 500
    at createError (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/core/createError.js:16:15)
    at settle (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/core/settle.js:17:12)
    at IncomingMessage.handleStreamEnd (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/adapters/http.js:244:11)
    at IncomingMessage.emit (node:events:388:22)
    at IncomingMessage.EventEmitter.emit (node:domain:470:12)
    at endReadableNT (node:internal/streams/readable:1294:12)
    at processTicksAndRejections (node:internal/process/task_queues:80:21) {
  config: {
    url: 'http://localhost:5000/duo/api/clean',
    method: 'post',
    data: '{"project_id":"0000002a","feedback":{"0":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":false},"1":{"facilityname":true,"type":false,"region":true,"owner":false,"manager":false},"2":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":true},"23":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"24":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"59":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"84":{"facilityname":true,"type":false,"region":true,"owner":true,"manager":true},"96":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"97":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"98":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false}},"refresh":0,"is_new_feedback":1}',
    headers: {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json;charset=utf-8',
      'User-Agent': 'axios/0.21.0',
      'Content-Length': 910
    },
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    adapter: [Function: httpAdapter],
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    validateStatus: [Function: validateStatus]
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      socket: [Function (anonymous)],
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      timeout: [Function (anonymous)],
      prefinish: [Function: requestOnPrefinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'localhost',
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: null,
      _httpMessage: [Circular *1],
      write: [Function: writeAfterFIN],
      [Symbol(async_id_symbol)]: 64,
      [Symbol(kHandle)]: null,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 34927,
      [Symbol(kBytesWritten)]: 1119,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: 'POST /duo/api/clean HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json;charset=utf-8\r\n' +
      'User-Agent: axios/0.21.0\r\n' +
      'Content-Length: 910\r\n' +
      'Host: localhost:5000\r\n' +
      'Connection: close\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: noopPendingOutput],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 80,
      protocol: 'http:',
      options: [Object],
      requests: {},
      sockets: [Object],
      freeSockets: {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'fifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    path: '/duo/api/clean',
    _ended: true,
    res: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 0,
      httpVersion: '1.0',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 500,
      statusMessage: 'INTERNAL SERVER ERROR',
      client: [Socket],
      _consuming: true,
      _dumped: false,
      req: [Circular *1],
      responseUrl: 'http://localhost:5000/duo/api/clean',
      redirects: [],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 10,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'localhost',
    protocol: 'http:',
    _redirectable: Writable {
      _writableState: [WritableState],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 910,
      _requestBodyBuffers: [],
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'http://localhost:5000/duo/api/clean',
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      'user-agent': [Array],
      'content-length': [Array],
      host: [Array]
    }
  },
  response: {
    status: 500,
    statusText: 'INTERNAL SERVER ERROR',
    headers: {
      'content-type': 'text/html; charset=utf-8',
      'x-xss-protection': '0',
      connection: 'close',
      server: 'Werkzeug/1.0.1 Python/3.8.5',
      date: 'Wed, 02 Dec 2020 06:08:50 GMT'
    },
    config: {
      url: 'http://localhost:5000/duo/api/clean',
      method: 'post',
      data: '{"project_id":"0000002a","feedback":{"0":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":false},"1":{"facilityname":true,"type":false,"region":true,"owner":false,"manager":false},"2":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":true},"23":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"24":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"59":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"84":{"facilityname":true,"type":false,"region":true,"owner":true,"manager":true},"96":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"97":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"98":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false}},"refresh":0,"is_new_feedback":1}',
      headers: [Object],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      adapter: [Function: httpAdapter],
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      validateStatus: [Function: validateStatus]
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: [Socket],
      _header: 'POST /duo/api/clean HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json;charset=utf-8\r\n' +
        'User-Agent: axios/0.21.0\r\n' +
        'Content-Length: 910\r\n' +
        'Host: localhost:5000\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: noopPendingOutput],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      path: '/duo/api/clean',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      _redirectable: [Writable],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    data: '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"\n' +
      '  "http://www.w3.org/TR/html4/loose.dtd">\n' +
      '<html>\n' +
      '  <head>\n' +
      '    <title>IndexError: list index out of range // Werkzeug Debugger</title>\n' +
      '    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"\n' +
      '        type="text/css">\n' +
      '    <!-- We need to make sure this has a favicon so that the debugger does\n' +
      '         not by accident trigger a request to /favicon.ico which might\n' +
      '         change the application state. -->\n' +
      '    <link rel="shortcut icon"\n' +
      '        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">\n' +
      '    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>\n' +
      '    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>\n' +
      '    <script type="text/javascript">\n' +
      '      var TRACEBACK = 140404235546336,\n' +
      '          CONSOLE_MODE = false,\n' +
      '          EVALEX = true,\n' +
      '          EVALEX_TRUSTED = false,\n' +
      '          SECRET = "wstazvowyW745e5AX7X7";\n' +
      '    </script>\n' +
      '  </head>\n' +
      '  <body style="background-color: #fff">\n' +
      '    <div class="debugger">\n' +
      '<h1>IndexError</h1>\n' +
      '<div class="detail">\n' +
      '  <p class="errormsg">IndexError: list index out of range</p>\n' +
      '</div>\n' +
      '<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>\n' +
      '<div class="traceback">\n' +
      '  \n' +
      '  <ul><li><div class="frame" id="frame-140404235543744">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2464</em>,\n' +
      '      in <code class="function">__call__</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>\n' +
      '<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n' +
      '<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404240720032">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2450</em>,\n' +
      '      in <code class="function">wsgi_app</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>error = e</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>raise</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>finally:</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404240723920">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask_restful/__init__.py"</cite>,\n' +
      '      line <em class="line">272</em>,\n' +
      '      in <code class="function">error_router</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>except Exception:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre>\n' +
      '<pre class="line current"><span class="ws">        </span>return original_handler(e)</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Error handler for the API transforms a raised exception into a Flask</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404240723824">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask_cors/extension.py"</cite>,\n' +
      '      line <em class="line">165</em>,\n' +
      '      in <code class="function">wrapped_function</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre>\n' +
      '<pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre>\n' +
      `<pre class="line before"><span class="ws">        </span>if options.get('intercept_exceptions', True):</pre>\n` +
      '<pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre>\n' +
      '<pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>return wrapped_function</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      `<pre class="line after"><span class="ws">            </span>if hasattr(app, 'handle_exception'):</pre>\n` +
      '<pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre>\n' +
      '<pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404240721376">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">1867</em>,\n' +
      '      in <code class="function">handle_exception</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>else:</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>raise e</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404240722720">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/_compat.py"</cite>,\n' +
      '      line <em class="line">38</em>,\n' +
      '      in <code class="function">reraise</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">    </span>from io import StringIO</pre>\n' +
      '<pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>\n' +
      '<pre class="line before"><span class="ws"></span> </pre>\n' +
      '<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>\n' +
      '<pre class="line current"><span class="ws">            </span>raise value.with_traceback(tb)</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>raise value</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws"></span>else:</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404240722576">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2447</em>,\n' +
      '      in <code class="function">wsgi_app</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>error = None</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n' +
      '<pre class="'... 24735 more characters
  },
  isAxiosError: true,
  toJSON: [Function: toJSON]
}
Error: Request failed with status code 500
    at createError (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/core/createError.js:16:15)
    at settle (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/core/settle.js:17:12)
    at IncomingMessage.handleStreamEnd (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/adapters/http.js:244:11)
    at IncomingMessage.emit (node:events:388:22)
    at IncomingMessage.EventEmitter.emit (node:domain:470:12)
    at endReadableNT (node:internal/streams/readable:1294:12)
    at processTicksAndRejections (node:internal/process/task_queues:80:21) {
  config: {
    url: 'http://localhost:5000/duo/api/clean',
    method: 'post',
    data: '{"project_id":"0000002e","feedback":{"6":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"8":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"9":{"facilityname":true,"type":false,"region":true,"owner":false,"manager":true},"22":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"39":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"50":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"65":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"116":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":true},"117":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"118":{"facilityname":true,"type":false,"region":true,"owner":true,"manager":false}},"refresh":0,"is_new_feedback":1}',
    headers: {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json;charset=utf-8',
      'User-Agent': 'axios/0.21.0',
      'Content-Length': 914
    },
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    adapter: [Function: httpAdapter],
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    validateStatus: [Function: validateStatus]
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      socket: [Function (anonymous)],
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      timeout: [Function (anonymous)],
      prefinish: [Function: requestOnPrefinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'localhost',
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: null,
      _httpMessage: [Circular *1],
      write: [Function: writeAfterFIN],
      [Symbol(async_id_symbol)]: 64,
      [Symbol(kHandle)]: null,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 34927,
      [Symbol(kBytesWritten)]: 1123,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: 'POST /duo/api/clean HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json;charset=utf-8\r\n' +
      'User-Agent: axios/0.21.0\r\n' +
      'Content-Length: 914\r\n' +
      'Host: localhost:5000\r\n' +
      'Connection: close\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: noopPendingOutput],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 80,
      protocol: 'http:',
      options: [Object],
      requests: {},
      sockets: [Object],
      freeSockets: {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'fifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    path: '/duo/api/clean',
    _ended: true,
    res: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 0,
      httpVersion: '1.0',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 500,
      statusMessage: 'INTERNAL SERVER ERROR',
      client: [Socket],
      _consuming: true,
      _dumped: false,
      req: [Circular *1],
      responseUrl: 'http://localhost:5000/duo/api/clean',
      redirects: [],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 10,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'localhost',
    protocol: 'http:',
    _redirectable: Writable {
      _writableState: [WritableState],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 914,
      _requestBodyBuffers: [],
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'http://localhost:5000/duo/api/clean',
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      'user-agent': [Array],
      'content-length': [Array],
      host: [Array]
    }
  },
  response: {
    status: 500,
    statusText: 'INTERNAL SERVER ERROR',
    headers: {
      'content-type': 'text/html; charset=utf-8',
      'x-xss-protection': '0',
      connection: 'close',
      server: 'Werkzeug/1.0.1 Python/3.8.5',
      date: 'Wed, 02 Dec 2020 06:09:16 GMT'
    },
    config: {
      url: 'http://localhost:5000/duo/api/clean',
      method: 'post',
      data: '{"project_id":"0000002e","feedback":{"6":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"8":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"9":{"facilityname":true,"type":false,"region":true,"owner":false,"manager":true},"22":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"39":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"50":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"65":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"116":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":true},"117":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"118":{"facilityname":true,"type":false,"region":true,"owner":true,"manager":false}},"refresh":0,"is_new_feedback":1}',
      headers: [Object],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      adapter: [Function: httpAdapter],
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      validateStatus: [Function: validateStatus]
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: [Socket],
      _header: 'POST /duo/api/clean HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json;charset=utf-8\r\n' +
        'User-Agent: axios/0.21.0\r\n' +
        'Content-Length: 914\r\n' +
        'Host: localhost:5000\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: noopPendingOutput],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      path: '/duo/api/clean',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      _redirectable: [Writable],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    data: '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"\n' +
      '  "http://www.w3.org/TR/html4/loose.dtd">\n' +
      '<html>\n' +
      '  <head>\n' +
      '    <title>IndexError: list index out of range // Werkzeug Debugger</title>\n' +
      '    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"\n' +
      '        type="text/css">\n' +
      '    <!-- We need to make sure this has a favicon so that the debugger does\n' +
      '         not by accident trigger a request to /favicon.ico which might\n' +
      '         change the application state. -->\n' +
      '    <link rel="shortcut icon"\n' +
      '        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">\n' +
      '    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>\n' +
      '    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>\n' +
      '    <script type="text/javascript">\n' +
      '      var TRACEBACK = 140404383914736,\n' +
      '          CONSOLE_MODE = false,\n' +
      '          EVALEX = true,\n' +
      '          EVALEX_TRUSTED = false,\n' +
      '          SECRET = "wstazvowyW745e5AX7X7";\n' +
      '    </script>\n' +
      '  </head>\n' +
      '  <body style="background-color: #fff">\n' +
      '    <div class="debugger">\n' +
      '<h1>IndexError</h1>\n' +
      '<div class="detail">\n' +
      '  <p class="errormsg">IndexError: list index out of range</p>\n' +
      '</div>\n' +
      '<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>\n' +
      '<div class="traceback">\n' +
      '  \n' +
      '  <ul><li><div class="frame" id="frame-140404383914592">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2464</em>,\n' +
      '      in <code class="function">__call__</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>\n' +
      '<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n' +
      '<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404383913776">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2450</em>,\n' +
      '      in <code class="function">wsgi_app</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>error = e</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>raise</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>finally:</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404383913296">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask_restful/__init__.py"</cite>,\n' +
      '      line <em class="line">272</em>,\n' +
      '      in <code class="function">error_router</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>except Exception:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre>\n' +
      '<pre class="line current"><span class="ws">        </span>return original_handler(e)</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Error handler for the API transforms a raised exception into a Flask</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404383914640">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask_cors/extension.py"</cite>,\n' +
      '      line <em class="line">165</em>,\n' +
      '      in <code class="function">wrapped_function</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre>\n' +
      '<pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre>\n' +
      `<pre class="line before"><span class="ws">        </span>if options.get('intercept_exceptions', True):</pre>\n` +
      '<pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre>\n' +
      '<pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>return wrapped_function</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      `<pre class="line after"><span class="ws">            </span>if hasattr(app, 'handle_exception'):</pre>\n` +
      '<pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre>\n' +
      '<pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404383915888">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">1867</em>,\n' +
      '      in <code class="function">handle_exception</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>else:</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>raise e</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404383913440">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/_compat.py"</cite>,\n' +
      '      line <em class="line">38</em>,\n' +
      '      in <code class="function">reraise</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">    </span>from io import StringIO</pre>\n' +
      '<pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>\n' +
      '<pre class="line before"><span class="ws"></span> </pre>\n' +
      '<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>\n' +
      '<pre class="line current"><span class="ws">            </span>raise value.with_traceback(tb)</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>raise value</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws"></span>else:</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404383913104">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2447</em>,\n' +
      '      in <code class="function">wsgi_app</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>error = None</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n' +
      '<pre class="'... 24735 more characters
  },
  isAxiosError: true,
  toJSON: [Function: toJSON]
}
Error: Request failed with status code 500
    at createError (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/core/createError.js:16:15)
    at settle (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/core/settle.js:17:12)
    at IncomingMessage.handleStreamEnd (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/adapters/http.js:244:11)
    at IncomingMessage.emit (node:events:388:22)
    at IncomingMessage.EventEmitter.emit (node:domain:470:12)
    at endReadableNT (node:internal/streams/readable:1294:12)
    at processTicksAndRejections (node:internal/process/task_queues:80:21) {
  config: {
    url: 'http://localhost:5000/duo/api/clean',
    method: 'post',
    data: '{"project_id":"00000032","feedback":{"66":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"67":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":false},"68":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"69":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":true},"96":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"97":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"98":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"115":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"116":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":true},"118":{"facilityname":true,"type":false,"region":true,"owner":true,"manager":false}},"refresh":0,"is_new_feedback":1}',
    headers: {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json;charset=utf-8',
      'User-Agent': 'axios/0.21.0',
      'Content-Length': 916
    },
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    adapter: [Function: httpAdapter],
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    validateStatus: [Function: validateStatus]
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      socket: [Function (anonymous)],
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      timeout: [Function (anonymous)],
      prefinish: [Function: requestOnPrefinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'localhost',
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: null,
      _httpMessage: [Circular *1],
      write: [Function: writeAfterFIN],
      [Symbol(async_id_symbol)]: 64,
      [Symbol(kHandle)]: null,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 34927,
      [Symbol(kBytesWritten)]: 1125,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: 'POST /duo/api/clean HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json;charset=utf-8\r\n' +
      'User-Agent: axios/0.21.0\r\n' +
      'Content-Length: 916\r\n' +
      'Host: localhost:5000\r\n' +
      'Connection: close\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: noopPendingOutput],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 80,
      protocol: 'http:',
      options: [Object],
      requests: {},
      sockets: [Object],
      freeSockets: {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'fifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    path: '/duo/api/clean',
    _ended: true,
    res: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 0,
      httpVersion: '1.0',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 500,
      statusMessage: 'INTERNAL SERVER ERROR',
      client: [Socket],
      _consuming: true,
      _dumped: false,
      req: [Circular *1],
      responseUrl: 'http://localhost:5000/duo/api/clean',
      redirects: [],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 10,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'localhost',
    protocol: 'http:',
    _redirectable: Writable {
      _writableState: [WritableState],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 916,
      _requestBodyBuffers: [],
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'http://localhost:5000/duo/api/clean',
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      'user-agent': [Array],
      'content-length': [Array],
      host: [Array]
    }
  },
  response: {
    status: 500,
    statusText: 'INTERNAL SERVER ERROR',
    headers: {
      'content-type': 'text/html; charset=utf-8',
      'x-xss-protection': '0',
      connection: 'close',
      server: 'Werkzeug/1.0.1 Python/3.8.5',
      date: 'Wed, 02 Dec 2020 06:09:50 GMT'
    },
    config: {
      url: 'http://localhost:5000/duo/api/clean',
      method: 'post',
      data: '{"project_id":"00000032","feedback":{"66":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"67":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":false},"68":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"69":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":true},"96":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"97":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"98":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"115":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"116":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":true},"118":{"facilityname":true,"type":false,"region":true,"owner":true,"manager":false}},"refresh":0,"is_new_feedback":1}',
      headers: [Object],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      adapter: [Function: httpAdapter],
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      validateStatus: [Function: validateStatus]
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: [Socket],
      _header: 'POST /duo/api/clean HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json;charset=utf-8\r\n' +
        'User-Agent: axios/0.21.0\r\n' +
        'Content-Length: 916\r\n' +
        'Host: localhost:5000\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: noopPendingOutput],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      path: '/duo/api/clean',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      _redirectable: [Writable],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    data: '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"\n' +
      '  "http://www.w3.org/TR/html4/loose.dtd">\n' +
      '<html>\n' +
      '  <head>\n' +
      '    <title>IndexError: list index out of range // Werkzeug Debugger</title>\n' +
      '    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"\n' +
      '        type="text/css">\n' +
      '    <!-- We need to make sure this has a favicon so that the debugger does\n' +
      '         not by accident trigger a request to /favicon.ico which might\n' +
      '         change the application state. -->\n' +
      '    <link rel="shortcut icon"\n' +
      '        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">\n' +
      '    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>\n' +
      '    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>\n' +
      '    <script type="text/javascript">\n' +
      '      var TRACEBACK = 140404276185168,\n' +
      '          CONSOLE_MODE = false,\n' +
      '          EVALEX = true,\n' +
      '          EVALEX_TRUSTED = false,\n' +
      '          SECRET = "wstazvowyW745e5AX7X7";\n' +
      '    </script>\n' +
      '  </head>\n' +
      '  <body style="background-color: #fff">\n' +
      '    <div class="debugger">\n' +
      '<h1>IndexError</h1>\n' +
      '<div class="detail">\n' +
      '  <p class="errormsg">IndexError: list index out of range</p>\n' +
      '</div>\n' +
      '<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>\n' +
      '<div class="traceback">\n' +
      '  \n' +
      '  <ul><li><div class="frame" id="frame-140404276185264">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2464</em>,\n' +
      '      in <code class="function">__call__</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>\n' +
      '<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n' +
      '<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404196608320">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2450</em>,\n' +
      '      in <code class="function">wsgi_app</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>error = e</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>raise</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>finally:</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404196608800">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask_restful/__init__.py"</cite>,\n' +
      '      line <em class="line">272</em>,\n' +
      '      in <code class="function">error_router</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>except Exception:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre>\n' +
      '<pre class="line current"><span class="ws">        </span>return original_handler(e)</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Error handler for the API transforms a raised exception into a Flask</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404196607984">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask_cors/extension.py"</cite>,\n' +
      '      line <em class="line">165</em>,\n' +
      '      in <code class="function">wrapped_function</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre>\n' +
      '<pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre>\n' +
      `<pre class="line before"><span class="ws">        </span>if options.get('intercept_exceptions', True):</pre>\n` +
      '<pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre>\n' +
      '<pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>return wrapped_function</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      `<pre class="line after"><span class="ws">            </span>if hasattr(app, 'handle_exception'):</pre>\n` +
      '<pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre>\n' +
      '<pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404196608992">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">1867</em>,\n' +
      '      in <code class="function">handle_exception</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>else:</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>raise e</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404196608464">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/_compat.py"</cite>,\n' +
      '      line <em class="line">38</em>,\n' +
      '      in <code class="function">reraise</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">    </span>from io import StringIO</pre>\n' +
      '<pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>\n' +
      '<pre class="line before"><span class="ws"></span> </pre>\n' +
      '<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>\n' +
      '<pre class="line current"><span class="ws">            </span>raise value.with_traceback(tb)</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>raise value</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws"></span>else:</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404196609952">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2447</em>,\n' +
      '      in <code class="function">wsgi_app</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>error = None</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n' +
      '<pre class="'... 24735 more characters
  },
  isAxiosError: true,
  toJSON: [Function: toJSON]
}
Error: Request failed with status code 500
    at createError (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/core/createError.js:16:15)
    at settle (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/core/settle.js:17:12)
    at IncomingMessage.handleStreamEnd (/Users/omeed/Desktop/OSU/grad/thesis/duo-clean/server/simulators/node_modules/axios/lib/adapters/http.js:244:11)
    at IncomingMessage.emit (node:events:388:22)
    at IncomingMessage.EventEmitter.emit (node:domain:470:12)
    at endReadableNT (node:internal/streams/readable:1294:12)
    at processTicksAndRejections (node:internal/process/task_queues:80:21) {
  config: {
    url: 'http://localhost:5000/duo/api/clean',
    method: 'post',
    data: '{"project_id":"00000036","feedback":{"2":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":true},"14":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"15":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"50":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"64":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"66":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"85":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"90":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"91":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"104":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false}},"refresh":0,"is_new_feedback":1}',
    headers: {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json;charset=utf-8',
      'User-Agent': 'axios/0.21.0',
      'Content-Length': 918
    },
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    adapter: [Function: httpAdapter],
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    validateStatus: [Function: validateStatus]
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      socket: [Function (anonymous)],
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      timeout: [Function (anonymous)],
      prefinish: [Function: requestOnPrefinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'localhost',
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: null,
      _httpMessage: [Circular *1],
      write: [Function: writeAfterFIN],
      [Symbol(async_id_symbol)]: 63,
      [Symbol(kHandle)]: null,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 34927,
      [Symbol(kBytesWritten)]: 1127,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: 'POST /duo/api/clean HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json;charset=utf-8\r\n' +
      'User-Agent: axios/0.21.0\r\n' +
      'Content-Length: 918\r\n' +
      'Host: localhost:5000\r\n' +
      'Connection: close\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: noopPendingOutput],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 80,
      protocol: 'http:',
      options: [Object],
      requests: {},
      sockets: [Object],
      freeSockets: {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'fifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    path: '/duo/api/clean',
    _ended: true,
    res: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 0,
      httpVersion: '1.0',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 500,
      statusMessage: 'INTERNAL SERVER ERROR',
      client: [Socket],
      _consuming: true,
      _dumped: false,
      req: [Circular *1],
      responseUrl: 'http://localhost:5000/duo/api/clean',
      redirects: [],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 10,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'localhost',
    protocol: 'http:',
    _redirectable: Writable {
      _writableState: [WritableState],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 918,
      _requestBodyBuffers: [],
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'http://localhost:5000/duo/api/clean',
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      'user-agent': [Array],
      'content-length': [Array],
      host: [Array]
    }
  },
  response: {
    status: 500,
    statusText: 'INTERNAL SERVER ERROR',
    headers: {
      'content-type': 'text/html; charset=utf-8',
      'x-xss-protection': '0',
      connection: 'close',
      server: 'Werkzeug/1.0.1 Python/3.8.5',
      date: 'Wed, 02 Dec 2020 06:10:19 GMT'
    },
    config: {
      url: 'http://localhost:5000/duo/api/clean',
      method: 'post',
      data: '{"project_id":"00000036","feedback":{"2":{"facilityname":true,"type":false,"region":false,"owner":true,"manager":true},"14":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"15":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"50":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"64":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"66":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"85":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"90":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"91":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false},"104":{"facilityname":true,"type":false,"region":false,"owner":false,"manager":false}},"refresh":0,"is_new_feedback":1}',
      headers: [Object],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      adapter: [Function: httpAdapter],
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      validateStatus: [Function: validateStatus]
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: [Socket],
      _header: 'POST /duo/api/clean HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json;charset=utf-8\r\n' +
        'User-Agent: axios/0.21.0\r\n' +
        'Content-Length: 918\r\n' +
        'Host: localhost:5000\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: noopPendingOutput],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      path: '/duo/api/clean',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      _redirectable: [Writable],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    data: '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"\n' +
      '  "http://www.w3.org/TR/html4/loose.dtd">\n' +
      '<html>\n' +
      '  <head>\n' +
      '    <title>IndexError: list index out of range // Werkzeug Debugger</title>\n' +
      '    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"\n' +
      '        type="text/css">\n' +
      '    <!-- We need to make sure this has a favicon so that the debugger does\n' +
      '         not by accident trigger a request to /favicon.ico which might\n' +
      '         change the application state. -->\n' +
      '    <link rel="shortcut icon"\n' +
      '        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">\n' +
      '    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>\n' +
      '    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>\n' +
      '    <script type="text/javascript">\n' +
      '      var TRACEBACK = 140404388433984,\n' +
      '          CONSOLE_MODE = false,\n' +
      '          EVALEX = true,\n' +
      '          EVALEX_TRUSTED = false,\n' +
      '          SECRET = "wstazvowyW745e5AX7X7";\n' +
      '    </script>\n' +
      '  </head>\n' +
      '  <body style="background-color: #fff">\n' +
      '    <div class="debugger">\n' +
      '<h1>IndexError</h1>\n' +
      '<div class="detail">\n' +
      '  <p class="errormsg">IndexError: list index out of range</p>\n' +
      '</div>\n' +
      '<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>\n' +
      '<div class="traceback">\n' +
      '  \n' +
      '  <ul><li><div class="frame" id="frame-140404388437584">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2464</em>,\n' +
      '      in <code class="function">__call__</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>\n' +
      '<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n' +
      '<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404236134528">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2450</em>,\n' +
      '      in <code class="function">wsgi_app</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>error = e</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>raise</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>finally:</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404236132704">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask_restful/__init__.py"</cite>,\n' +
      '      line <em class="line">272</em>,\n' +
      '      in <code class="function">error_router</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>except Exception:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre>\n' +
      '<pre class="line current"><span class="ws">        </span>return original_handler(e)</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Error handler for the API transforms a raised exception into a Flask</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404236132752">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask_cors/extension.py"</cite>,\n' +
      '      line <em class="line">165</em>,\n' +
      '      in <code class="function">wrapped_function</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre>\n' +
      '<pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre>\n' +
      `<pre class="line before"><span class="ws">        </span>if options.get('intercept_exceptions', True):</pre>\n` +
      '<pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre>\n' +
      '<pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>return wrapped_function</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      `<pre class="line after"><span class="ws">            </span>if hasattr(app, 'handle_exception'):</pre>\n` +
      '<pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre>\n' +
      '<pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404236133856">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">1867</em>,\n' +
      '      in <code class="function">handle_exception</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>\n' +
      '<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>\n' +
      '<pre class="line after"><span class="ws">            </span>else:</pre>\n' +
      '<pre class="line after"><span class="ws">                </span>raise e</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404236135968">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/_compat.py"</cite>,\n' +
      '      line <em class="line">38</em>,\n' +
      '      in <code class="function">reraise</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">    </span>from io import StringIO</pre>\n' +
      '<pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>\n' +
      '<pre class="line before"><span class="ws"></span> </pre>\n' +
      '<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>\n' +
      '<pre class="line current"><span class="ws">            </span>raise value.with_traceback(tb)</pre>\n' +
      '<pre class="line after"><span class="ws">        </span>raise value</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>\n' +
      '<pre class="line after"><span class="ws"></span> </pre>\n' +
      '<pre class="line after"><span class="ws"></span>else:</pre></div>\n' +
      '</div>\n' +
      '\n' +
      '<li><div class="frame" id="frame-140404236135488">\n' +
      '  <h4>File <cite class="filename">"/Users/omeed/anaconda3/envs/thesis/lib/python3.8/site-packages/flask/app.py"</cite>,\n' +
      '      line <em class="line">2447</em>,\n' +
      '      in <code class="function">wsgi_app</code></h4>\n' +
      '  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>error = None</pre>\n' +
      '<pre class="line before"><span class="ws">        </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">            </span>try:</pre>\n' +
      '<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n' +
      '<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n' +
      '<pre class="'... 24735 more characters
  },
  isAxiosError: true,
  toJSON: [Function: toJSON]
}
